<?xml version="1.0" encoding="UTF-8" ?><root><title type="str">AWS IAM Backdoor Users Keys</title><id type="str">0a5177f4-6ca9-44c2-aacf-d3f3d8b6e4d2</id><status type="str">test</status><description type="str">Detects AWS API key creation for a user by another user.
Backdoored users can be used to obtain persistence in the AWS environment.
Also with this alert, you can detect a flow of AWS keys in your org.
</description><references type="list"><item type="str">https://github.com/RhinoSecurityLabs/pacu/blob/866376cd711666c775bbfcde0524c817f2c5b181/pacu/modules/iam__backdoor_users_keys/main.py</item></references><author type="str">faloker</author><date type="str">2020/02/12</date><modified type="str">2022/10/09</modified><tags type="list"><item type="str">attack.persistence</item><item type="str">attack.t1098</item></tags><logsource type="dict"><product type="str">aws</product><service type="str">cloudtrail</service></logsource><detection type="dict"><selection_source type="dict"><eventSource type="str">iam.amazonaws.com</eventSource><eventName type="str">CreateAccessKey</eventName></selection_source><filter type="dict"><key name="userIdentity.arn|contains" type="str">responseElements.accessKey.userName</key></filter><condition type="str">selection_source and not filter</condition></detection><fields type="list"><item type="str">userIdentity.arn</item><item type="str">responseElements.accessKey.userName</item><item type="str">errorCode</item><item type="str">errorMessage</item></fields><falsepositives type="list"><item type="str">Adding user keys to their own accounts (the filter cannot cover all possible variants of user naming)</item><item type="str">AWS API keys legitimate exchange workflows</item></falsepositives><level type="str">medium</level></root>