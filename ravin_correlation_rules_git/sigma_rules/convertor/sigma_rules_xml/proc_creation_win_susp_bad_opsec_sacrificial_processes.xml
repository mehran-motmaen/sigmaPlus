<?xml version="1.0" encoding="UTF-8" ?><root><title type="str">Bad Opsec Defaults Sacrificial Processes With Improper Arguments</title><id type="str">a7c3d773-caef-227e-a7e7-c2f13c622329</id><related type="list"><item type="dict"><id type="str">f5647edc-a7bf-4737-ab50-ef8c60dc3add</id><type type="str">obsoletes</type></item></related><status type="str">experimental</status><description type="str">Detects attackers using tooling with bad opsec defaults.
E.g. spawning a sacrificial process to inject a capability into the process without taking into account how the process is normally run.
One trivial example of this is using rundll32.exe without arguments as a sacrificial process (default in CS, now highlighted by c2lint), running WerFault without arguments (Kraken - credit am0nsec), and other examples.
</description><references type="list"><item type="str">https://blog.malwarebytes.com/malwarebytes-news/2020/10/kraken-attack-abuses-wer-service/</item><item type="str">https://www.cobaltstrike.com/help-opsec</item><item type="str">https://twitter.com/CyberRaiju/status/1251492025678983169</item><item type="str">https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/regsvr32</item><item type="str">https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/rundll32</item><item type="str">https://docs.microsoft.com/en-us/dotnet/framework/tools/regasm-exe-assembly-registration-tool</item><item type="str">https://docs.microsoft.com/en-us/dotnet/framework/tools/regsvcs-exe-net-services-installation-tool#feedback</item></references><author type="str">Oleg Kolesnikov @securonix invrep_de, oscd.community, Florian Roth (Nextron Systems), Christian Burkard (Nextron Systems)</author><date type="str">2020/10/23</date><modified type="str">2023/01/25</modified><tags type="list"><item type="str">attack.defense_evasion</item><item type="str">attack.t1218.011</item></tags><logsource type="dict"><category type="str">process_creation</category><product type="str">windows</product></logsource><detection type="dict"><selection1 type="dict"><key name="Image|endswith" type="str">\WerFault.exe</key><key name="CommandLine|endswith" type="str">WerFault.exe</key></selection1><selection2 type="dict"><key name="Image|endswith" type="str">\rundll32.exe</key><key name="CommandLine|endswith" type="str">rundll32.exe</key></selection2><selection3 type="dict"><key name="Image|endswith" type="str">\regsvcs.exe</key><key name="CommandLine|endswith" type="str">regsvcs.exe</key></selection3><selection4 type="dict"><key name="Image|endswith" type="str">\regasm.exe</key><key name="CommandLine|endswith" type="str">regasm.exe</key></selection4><selection5 type="dict"><key name="Image|endswith" type="str">\regsvr32.exe</key><key name="CommandLine|endswith" type="str">regsvr32.exe</key></selection5><filter_edge_update type="dict"><key name="ParentImage|startswith" type="str">C:\Users\</key><key name="ParentImage|contains" type="str">\AppData\Local\Microsoft\EdgeUpdate\Install\{</key><key name="ParentImage|endswith" type="str">\setup.exe</key><key name="ParentCommandLine|contains" type="str">\setup.exe&quot; --install-archive=&quot;C:\Users\</key></filter_edge_update><condition type="str">1 of selection* and not 1 of filter*</condition></detection><fields type="list"><item type="str">ParentImage</item><item type="str">ParentCommandLine</item></fields><falsepositives type="list"><item type="str">Unlikely</item></falsepositives><level type="str">high</level></root>