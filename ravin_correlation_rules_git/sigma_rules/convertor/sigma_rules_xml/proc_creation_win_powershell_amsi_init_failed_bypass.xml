<?xml version="1.0" encoding="UTF-8" ?><root><title type="str">Potential AMSI Bypass Via .NET Reflection</title><id type="str">30edb182-aa75-42c0-b0a9-e998bb29067c</id><related type="list"><item type="dict"><id type="str">4f927692-68b5-4267-871b-073c45f4f6fe</id><type type="str">obsoletes</type></item></related><status type="str">test</status><description type="str">Detects Request to &quot;amsiInitFailed&quot; that can be used to disable AMSI Scanning</description><references type="list"><item type="str">https://s3cur3th1ssh1t.github.io/Bypass_AMSI_by_manual_modification/</item><item type="str">https://www.mdsec.co.uk/2018/06/exploring-powershell-amsi-and-logging-evasion/</item></references><author type="str">Markus Neis, @Kostastsale</author><date type="str">2018/08/17</date><modified type="str">2023/02/03</modified><tags type="list"><item type="str">attack.defense_evasion</item><item type="str">attack.t1562.001</item></tags><logsource type="dict"><category type="str">process_creation</category><product type="str">windows</product></logsource><detection type="dict"><selection_1 type="dict"><key name="CommandLine|contains" type="list"><item type="str">System.Management.Automation.AmsiUtils</item><item type="str">amsiInitFailed</item></key></selection_1><selection_2 type="dict"><key name="CommandLine|contains|all" type="list"><item type="str">[Ref].Assembly.GetType</item><item type="str">SetValue($null,$true)</item><item type="str">NonPublic,Static</item></key></selection_2><condition type="str">1 of selection_*</condition></detection><falsepositives type="list"><item type="str">Unlikely</item></falsepositives><level type="str">high</level></root>