<?xml version="1.0" encoding="UTF-8" ?><root><title type="str">SQL Injection Strings</title><id type="str">5513deaf-f49a-46c2-a6c8-3f111b5cb453</id><status type="str">test</status><description type="str">Detects SQL Injection attempts via GET requests in access logs</description><references type="list"><item type="str">https://www.acunetix.com/blog/articles/exploiting-sql-injection-example/</item><item type="str">https://www.acunetix.com/blog/articles/using-logs-to-investigate-a-web-application-attack/</item><item type="str">https://brightsec.com/blog/sql-injection-payloads/</item><item type="str">https://github.com/payloadbox/sql-injection-payload-list</item></references><author type="str">Saw Win Naung, Nasreddine Bencherchali (Nextron Systems)</author><date type="str">2020/02/22</date><modified type="str">2022/07/25</modified><logsource type="dict"><category type="str">webserver</category></logsource><detection type="dict"><select_method type="dict"><cs-method type="str">GET</cs-method></select_method><keywords type="list"><item type="str">=select </item><item type="str">=select%20</item><item type="str">=select(</item><item type="str">UNION SELECT</item><item type="str">UNION%20SELECT</item><item type="str">UNION ALL SELECT</item><item type="str">UNION%20ALL%20SELECT</item><item type="str">CONCAT(0x</item><item type="str">order by </item><item type="str">order%20by%20</item><item type="str">information_schema.tables</item><item type="str">group_concat(</item><item type="str">table_schema</item><item type="str">select%28sleep%2810%29</item><item type="str">@@version</item><item type="str">&apos;1&apos;=&apos;1</item><item type="str">%271%27%3D%271</item><item type="str">SELECTCHAR(</item><item type="str">select * </item><item type="str">select%20*%20</item><item type="str">or 1=1#</item><item type="str">or%201=1#</item></keywords><filter type="dict"><sc-status type="int">404</sc-status></filter><condition type="str">select_method and keywords and not 1 of filter*</condition></detection><fields type="list"><item type="str">client_ip</item><item type="str">vhost</item><item type="str">url</item><item type="str">response</item></fields><falsepositives type="list"><item type="str">Java scripts and CSS Files</item><item type="str">User searches in search boxes of the respective website</item><item type="str">Internal vulnerability scanners can cause some serious FPs when used, if you experience a lot of FPs due to this think of adding more filters such as &quot;User Agent&quot; strings and more response codes</item></falsepositives><level type="str">high</level></root>