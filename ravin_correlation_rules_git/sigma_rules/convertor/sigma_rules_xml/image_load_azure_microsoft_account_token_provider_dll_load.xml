<?xml version="1.0" encoding="UTF-8" ?><root><title type="str">Potential Azure Browser SSO Abuse</title><id type="str">50f852e6-af22-4c78-9ede-42ef36aa3453</id><status type="str">test</status><description type="str">Detects abusing Azure Browser SSO by requesting OAuth 2.0 refresh tokens for an Azure-AD-authenticated Windows user (i.e. the machine is joined to Azure AD and a user logs in with their Azure AD account) wanting to perform SSO authentication in the browser.
An attacker can use this to authenticate to Azure AD in a browser as that user.
</description><references type="list"><item type="str">https://posts.specterops.io/requesting-azure-ad-request-tokens-on-azure-ad-joined-machines-for-browser-sso-2b0409caad30</item></references><author type="str">Den Iuzvyk</author><date type="str">2020/07/15</date><modified type="str">2023/04/18</modified><tags type="list"><item type="str">attack.defense_evasion</item><item type="str">attack.privilege_escalation</item><item type="str">attack.t1574.002</item></tags><logsource type="dict"><category type="str">image_load</category><product type="str">windows</product></logsource><detection type="dict"><selection type="dict"><ImageLoaded type="str">C:\Windows\System32\MicrosoftAccountTokenProvider.dll</ImageLoaded></selection><filter_main_bgtaskhost type="dict"><key name="Image|startswith" type="list"><item type="str">C:\Windows\System32\</item><item type="str">C:\Windows\SysWOW64\</item></key><key name="Image|endswith" type="str">\BackgroundTaskHost.exe</key></filter_main_bgtaskhost><filter_optional_devenv type="dict"><key name="Image|startswith" type="list"><item type="str">C:\Program Files\Microsoft Visual Studio\</item><item type="str">C:\Program Files (x86)\Microsoft Visual Studio\</item></key><key name="Image|endswith" type="str">\IDE\devenv.exe</key></filter_optional_devenv><filter_optional_ie type="dict"><Image type="list"><item type="str">C:\Program Files (x86)\Internet Explorer\iexplore.exe</item><item type="str">C:\Program Files\Internet Explorer\iexplore.exe</item></Image></filter_optional_ie><filter_optional_edge_1 type="list"><item type="dict"><key name="Image|startswith" type="str">C:\Program Files (x86)\Microsoft\EdgeWebView\Application\</key></item><item type="dict"><key name="Image|endswith" type="str">\WindowsApps\MicrosoftEdge.exe</key></item><item type="dict"><Image type="list"><item type="str">C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe</item><item type="str">C:\Program Files\Microsoft\Edge\Application\msedge.exe</item></Image></item></filter_optional_edge_1><filter_optional_edge_2 type="dict"><key name="Image|startswith" type="list"><item type="str">C:\Program Files (x86)\Microsoft\EdgeCore\</item><item type="str">C:\Program Files\Microsoft\EdgeCore\</item></key><key name="Image|endswith" type="list"><item type="str">\msedge.exe</item><item type="str">\msedgewebview2.exe</item></key></filter_optional_edge_2><filter_optional_onedrive type="dict"><key name="Image|endswith" type="str">\AppData\Local\Microsoft\OneDrive\OneDrive.exe</key></filter_optional_onedrive><filter_optional_null type="dict"><Image type="null"></Image></filter_optional_null><condition type="str">selection and not 1 of filter_main_* and not 1 of filter_optional_*</condition></detection><falsepositives type="list"><item type="str">False positives are expected since this rules is only looking for the DLL load event. This rule is better used in correlation with related activity</item></falsepositives><level type="str">low</level></root>